# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# exec --no-startup-id ~/Scripts/hdmi-setup.sh

include display.conf
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 12

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# exec_always xmodmap -e "keycode 107 = Super_L"
# exec_always setxkbmap -option ctrl:nocaps 2>/dev/null
# exec_always "setxkbmap -option ctrl:nocaps -option shift:both_capslock && xmodmap -e 'keycode 107 = Super_L'"

# exec_always "setxkbmap -option ctrl:nocaps -option shift:both_capslock -option caps:escape; xmodmap -e 'keycode 107 = Super_L'"

exec_always --no-startup-id "setxkbmap -option caps:escape,shift:both_capslock"
exec_always --no-startup-id xmodmap -e 'keycode 107 = Super_L'

# bindsym $mod+j xdotool key Escape


# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# MANAGED BY XFCE4-BATTERY-MANAGER NEEDS TO BE CLOSED TO WORK
#MOVIE MODE
#DIM AF AFTER 5 SECONDS
#SUSPEND AFTER 5 minutes
#FIX BRIGHTNESS BUTTONS



#Turn screensaver off
exec_always --no-startup-id xset s off
exec_always --no-startup-id xset -dpms
#exec_always --no-startup-id xautolock -time 1  -corners +++- -cornersize 200 -locker 'i3lock -c 000000 && xset dpms force off'
#exec_always --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -c 000000 --nofork

bindsym XF86MonBrightnessUp exec --no-startup-id exec brightnessctl set +10%
# increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id exec brightnessctl set 2%-

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+space exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
#bindsym $mod+v split v
# bindsym $mod+s mode "split [h]orizontal [v]ertical"
# mode "split [h]orizontal [v]ertical" {
#   bindsym h split v, mode "default"
#   bindsym v split h, mode "default"
#   bindsym Escape mode "default"
#   bindsym Return mode "default"
# }



# enter fullscreen mode for the focused container
bindsym $mod+m fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+v layout toggle split

# toggle tiling / floating
# bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# multipe monitors

workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output eDP-1

workspace 6 output HDMI-2
workspace 7 output HDMI-2
workspace 8 output HDMI-2
workspace 9 output HDMI-2
workspace 10 output HDMI-2

# reload the configuration file
#bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -f 'pango:monospace 12' -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym h resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# weather pihole battery 
# theme dracula-powerline system
bar {
    colors{
        background #000000
            statusline #ffffff
                              #border # background #text
#285577
            focused_workspace #285577 #285577 #ffffff
            active_workspace #285577 #285577 #ffffff
            inactive_workspace #000000 #000000 #2f79ad
    }
    font pango: monospace 12 
    #https://github.com/gabrielelana/awesome-terminal-fonts

    position top
    tray_output none
    status_command ~/.local/bin/bumblebee-status \
    -m weather \
    disk \
    memory \
    docker_ps \
    nic \
    uptime \
    battery \
    battery-upower \
    pamixer \
    bluetooth \
    time \
    date \
    -p weather.location="Harlow" \
    weather.showcity="false" \
    weather.showminmax="true" \
    memory.format="{used}\{total}" \
    disk.format="{used}" \
    nic.include="wlp61s0" \
    nic.format="{state} {ip}" \
    time.format="%H:%M" \
    battery.upower.showremaining="true" \
    battery.showpowerconsumption="true" \
    interval=1s \
    -t iceberg-contrast

}

# keybinding to lock screen
bindsym $mod+x exec "i3lock -c 000000"

# keybinding for rofi power menu
bindsym $mod+p exec ~/Scripts/rofi/rofi-power.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+q kill

#exec_always --no-startup-id i3-sensible-terminal -n dropdown -e vim ~/notes.txt
#for_window [instance="dropdown"] floating enable
#for_window [instance="dropdown"] resize set 625 400
#for_window [instance="dropdown"] move scratchpad
#for_window [instance="dropdown"] border pixel 5
#
#bindsym $mod+g [instance="dropdown"] scratchpad show
##, [instance="dropdown"] move position center
#
#bindsym $mod+shift+g resize shrink height 10 px or 10 ppt

#bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show
bindsym $mod+plus floating toggle
# bindsym $mod+n exec --no-startup-id i3-sensible-terminal -e vim ~/notes.txt

exec_always --no-startup-id "$HOME/Scripts/set-wallpaper.sh"

#bindsym $mod+shift+x exec i3-sensible-terminal -e 'shutdown now'
# auto lock the screen

#exec "xautolock -detectsleep -time 3 -locker \"i3lock -c 000000\""
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
# bindsym $mod+i exec flameshot gui

set $mode_launcher Launcher: [f]irefox, [c]hrome, [s]kype, [C]alibre, [t]hunar, [a]ndroid-studio, [A]nki, [r]anger, [z]athura, [v]irtual box, [i]nsomnia, [o]bsidian, [e]mail, [l]mux

for_window [class="Xfce4-terminal" title="Floaty"] floating enable, resize set 1200 700, move position center


bindsym $mod+o mode "$mode_launcher"
mode "$mode_launcher"{
    bindsym a exec android-studio ; mode "default"
    bindsym A exec anki ; mode "default"
    bindsym e exec --no-startup-id i3-msg 'exec xfce4-terminal -e aerc' ; mode "default"
    bindsym c exec google-chrome ; mode "default"
    bindsym C exec calibre ; mode "default"
    bindsym f exec firefox ; mode "default"
    bindsym o exec obsidian ; mode "default"
    bindsym t exec thunar ; mode "default"
    bindsym z exec zathura ; mode "default"
    bindsym v exec virtualbox ; mode "default"
    bindsym i exec insomnia ; mode "default"
    bindsym s exec skypeforlinux ; mode "default"
    bindsym l exec --no-startup-id xfce4-terminal --title="Floaty" --command="$HOME/Scripts/tmux.sh"; mode "default"
    bindsym r exec --no-startup-id i3-msg 'exec xfce4-terminal -e ranger' ; mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

set $temp_mode Screen temperature: [i]ncrease, [d]ecrease
bindsym $mod+t mode "$temp_mode"
mode "$temp_mode"{
    bindsym i exec ~/Scripts/Redshift/inc_temperature.sh
    bindsym d exec ~/Scripts/Redshift/dec_temperature.sh
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

set $find_mode find: [d]irectory, [/]root [f]ile, [.]dotfiles, [o]ld files, [t]mux sessions
bindsym $mod+f mode "$find_mode"
mode "$find_mode"{
    bindsym d exec ~/Scripts/find/dir.sh home; mode "default"
    bindsym f exec ~/Scripts/find/file.sh; mode "default"
    bindsym t exec ~/Scripts/find/tmux.sh; mode "default"
    bindsym o exec ~/Scripts/find/old-files.sh; mode "default"
    bindsym slash exec ~/Scripts/find/dir.sh root; mode "default"
    bindsym period exec ~/Scripts/find/dotfiles.sh; mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}


# set $window_edit Windows: [s]wap
# bindsym $mod+i mode "$window_edit
# mode "$window_edit"{
#     bindsym s exec ~/Scripts/swap_displays.sh
#     bindsym Escape mode "default"
#     bindsym Return mode "default"
# }

set $utility_launcher Utilities: [h]ide, [s]shot, [w]indow, [r]un, [i]talian, [e]nglish, [x]kill, [k]eys, [f]av-websites, [I]cons, [E]mojis

bindsym $mod+u mode "$utility_launcher"
mode "$utility_launcher"{
    bindsym m exec ~/Scripts/Mullvad/toggle.sh; mode "default"
    bindsym s exec flameshot gui; mode "default"
    bindsym i exec setxkbmap it; mode "default"
    bindsym e exec setxkbmap gb; mode "default"
    bindsym h exec ~/Scripts/savei3.py; mode "default"
    bindsym g exec ~/Scripts/test-google.sh; mode "default"
    bindsym x exec xkill; mode "default"
    bindsym w exec rofi -show window; mode "default"
    bindsym f exec ~/Scripts/rofi/rofi-websites.sh; mode "default"
    bindsym r exec rofi -show run -auto-select; mode "default"
    bindsym k exec cat ~/Syncthing/rofi/text | rofi -dmenu -auto-select| xargs -I {} bash -c 'echo -n "{}" | xclip -selection clipboard && xdotool key Ctrl+v'; mode "default"
    bindsym Shift+i exec ~/Scripts/rofi/rofi-icons.sh; mode "default"
    bindsym Shift+e exec ~/Scripts/rofi/rofi-emoji.sh; mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
                                            

##
# move floating windows with keys
# bindsym $mod+m mode "move" focus floating
mode "move" {
    bindsym Left  move left 200px
    bindsym Down  move down 200px
    bindsym Up    move up 200px
    bindsym Right move right 200px

    bindsym h     move left 50px
    bindsym j     move down 50px
    bindsym k     move up 50px
    bindsym l     move right 50px

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $mode_relocate Move window to:
bindsym $mod+w mode "$mode_relocate"
mode "$mode_relocate" {
    bindsym 1 move container to workspace number $ws1
    bindsym 2 move container to workspace number $ws2
    bindsym 3 move container to workspace number $ws3
    bindsym 4 move container to workspace number $ws4
    bindsym 5 move container to workspace number $ws5
    bindsym 6 move container to workspace number $ws6
    bindsym 7 move container to workspace number $ws7
    bindsym 8 move container to workspace number $ws8
    bindsym 9 move container to workspace number $ws9
    bindsym 10 move container to workspace number $ws10
    bindsym minus move scratchpad

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $8Bitmode 8Bit: [a]nki [v]lc
set $8BitAnki Anki
set $8BitVlc Vlc
bindsym $mod+c mode "$8Bitmode"

mode "$8Bitmode" {
    bindsym a mode "$8BitAnki"
    bindsym v mode "$8BitVlc"
    bindsym Return mode "default"
    bindsym Escape mode "default"

}

# set $utilities "Temp: [i]nc, [d]ec. BT:[c]onnect, [b]isconnect"
# bindsym $mod+u mode $utilities
#
# #Handle screen temperature changing
# mode $utilities {
#     bindsym d exec ~/Scripts/dec_temperature.sh
#     bindsym i exec ~/Scripts/inc_temperature.sh
#     bindsym c exec ~/Scripts/bluetooth/connect.sh
#     bindsym b exec ~/Scripts/bluetooth/disconnect.sh
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }

mode "$8BitVlc" {
#jghi l:k r:m
# arrows left:e up:c down:d right:f

    #b button pause/start
    bindsym --release i exec --no-startup-id xdotool key --clearmodifiers p

    #b button pause/start
    bindsym --release g exec --no-startup-id xdotool key --clearmodifiers n
    

    #b button pause/start
    bindsym --release j exec --no-startup-id xdotool key --clearmodifiers space
    #left bumber jump back
    bindsym --release k exec --no-startup-id xdotool key --clearmodifiers h

    #right bumber jump back
    bindsym --release m exec --no-startup-id xdotool key --clearmodifiers l

    #left arrow
    bindsym --release e exec --no-startup-id xdotool key --clearmodifiers z

    #right arrow
    bindsym --release f exec --no-startup-id xdotool key --clearmodifiers x

    #right arrow
    bindsym --release c exec --no-startup-id xdotool key --clearmodifiers q
    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}



mode "$8BitAnki" {
#jghi l:k r:m
    bindsym --release j exec --no-startup-id xdotool key --clearmodifiers space
    bindsym --release g exec --no-startup-id xdotool key --clearmodifiers ctrl+z

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


bindsym ctrl+$mod+h workspace prev
bindsym ctrl+$mod+l workspace next

bindsym $mod+i exec /home/lewis/Scripts/rofi/rofi-main.sh

set $searchmode search: [c]hatgpt, [g]oogle, [y]outube, [e]bay, [a]mazon, g[i]thub, [r]eddit
bindsym $mod+s mode "$searchmode"
mode "$searchmode" {
    bindsym c exec /home/lewis/Scripts/search/chatgpt.sh; mode "default"
    bindsym y exec /home/lewis/Scripts/search/youtube.sh; mode "default"
    bindsym g exec /home/lewis/Scripts/search/google.sh; mode "default"
    bindsym e exec /home/lewis/Scripts/search/ebay.sh; mode "default"
    bindsym a exec /home/lewis/Scripts/search/amazon.sh; mode "default"
    bindsym i exec /home/lewis/Scripts/search/github.sh; mode "default"
    bindsym r exec /home/lewis/Scripts/search/reddit.sh; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $dockermode docker: [s]hell, [l]ogs, [r]emove, s[t]art, sto[p], [R]estart
bindsym $mod+d mode "$dockermode"
mode "$dockermode" {
    bindsym s exec /home/lewis/Scripts/rofi/docker/docker-shell.sh; mode "default"
    bindsym l exec /home/lewis/Scripts/rofi/docker/docker-logs.sh; mode "default"
    bindsym r exec /home/lewis/Scripts/rofi/docker/docker-remove.sh; mode "default"
    bindsym t exec /home/lewis/Scripts/rofi/docker/docker-start.sh; mode "default"
    bindsym p exec /home/lewis/Scripts/rofi/docker/docker-stop.sh; mode "default"
    bindsym Shift+r exec /home/lewis/Scripts/rofi/docker/docker-restart.sh; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# SSH quick launcher
bindsym $mod+n exec /home/lewis/Scripts/rofi/rofi-ssh.sh

# Git repos quick launcher
bindsym $mod+g exec /home/lewis/Scripts/rofi/rofi-git-repos.sh
